{"version":3,"sources":["css/editor.module.css","../../src/index.ts","components/demo.tsx","components/editor.tsx","components/toggle.tsx","components/control.tsx","App.tsx","index.tsx","css/homePage.module.css","css/control.module.css","css/demo.module.css","css/toggle.module.css"],"names":["module","exports","EVERY_POSITIONS","usePositionning","deps","preferences","space","strictMode","useState","nodeParent","_setNodeParent","refParent","useRef","setNodeParent","useCallback","node","setNodeParentFunction","nodeChildren","_setNodeChildren","refChildren","setNodeChildren","setNodeChildrenFunction","top","left","right","bottom","position","setPosition","actualPosition","setActualPosition","regex","style","getComputedStyle","getScrollParent","document","scroll","window","Error","container","parentRect","width","height","childrenRect","positionHasBeenSet","positionItem","isPositionAvailable","updatePosition","opacity","useEffect","findBestPosition","useLayoutEffect","Demo","rootRef","open","setOpen","styleChildren","current","className","root","ref","parent","onClick","child","Editor","editorWindow","line","map","index","length","Toggle","state","setState","select","Control","setSpace","setPreferences","setStrictMode","positionOptions","id","preferenceChange","selectedValue","controls","input","htmlFor","type","value","onChange","e","parseInt","target","options","displayValue","onSelect","onRemove","placeholder","optionContainer","maxHeight","App","header","brandIcon","href","rel","icon","faGithub","npm","faNpm","demo","demoBox","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1a2d250a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"editor_root__IrZAS\",\"editorWindow\":\"editor_editorWindow__3qfpK\",\"line\":\"editor_line__3XFA5\"};","import {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState\n} from 'react'\n\nimport {\n  PositionPreferences,\n  UsePositionningHook,\n  AbsolutePosition\n} from './typings'\n\n// a Set of every position available\nexport const EVERY_POSITIONS = [\n  'top',\n  'top-left',\n  'top-right',\n  'right-bottom',\n  'right',\n  'right-top',\n  'left-bottom',\n  'left',\n  'left-top',\n  'bottom',\n  'bottom-left',\n  'bottom-right',\n  'none'\n] as const\n\nexport default function usePositionning(\n  {\n    preferences = [],\n    space = 0,\n    strictMode = false\n  }: {\n    preferences?: Array<PositionPreferences>\n    space?: number\n    strictMode?: boolean\n  },\n  deps: Parameters<typeof useEffect>[1] = []\n): UsePositionningHook {\n  //get dimension fo parent and children\n  const [nodeParent, _setNodeParent] = useState<HTMLElement>()\n  const refParent = useRef(nodeParent)\n  const setNodeParentFunction = (node: HTMLElement) => {\n    refParent.current = node\n    _setNodeParent(node)\n  }\n  const setNodeParent = useCallback((node) => {\n    setNodeParentFunction(node)\n  }, [])\n\n  const [nodeChildren, _setNodeChildren] = useState<HTMLElement>()\n  const refChildren = useRef(nodeChildren)\n  const setNodeChildrenFunction = (node: HTMLElement) => {\n    refChildren.current = node\n    _setNodeChildren(node)\n  }\n  const setNodeChildren = useCallback((node) => {\n    setNodeChildrenFunction(node)\n  }, [])\n\n  //CSS property, position are set based on his parent position\n  const [position, setPosition] = useState<AbsolutePosition>({\n    top: 'unset',\n    left: 'unset',\n    right: 'unset',\n    bottom: 'unset',\n    position: 'absolute'\n  })\n\n  const [actualPosition, setActualPosition] = useState<PositionPreferences>()\n  //find the closest scrollable parent of the element\n  const regex = /(auto|scroll)/\n  const style = (node: Element, prop: string) =>\n    getComputedStyle(node, null).getPropertyValue(prop)\n  const scroll = (node: Element) =>\n    regex.test(\n      style(node, 'overflow') +\n        style(node, 'overflow-y') +\n        style(node, 'overflow-x')\n    )\n  const getScrollParent: any = (node: Element) =>\n    !node || node === document.body\n      ? document.body\n      : scroll(node)\n      ? node\n      : getScrollParent(node.parentNode)\n\n  // update the css property when the user scroll\n  function findBestPosition(\n    space: number,\n    strictMode: boolean,\n    preferences: Array<PositionPreferences>\n  ) {\n    space = space\n    strictMode = strictMode\n    preferences = preferences\n    window.requestAnimationFrame(() => {\n      if (refParent.current !== null && refChildren.current !== null) {\n        //return an error if the parent node is not in relative position\n        if (\n          window\n            .getComputedStyle(refParent.current as Element)\n            .getPropertyValue('position') !== 'relative'\n        ) {\n          throw new Error('parent node must have a relative position')\n        }\n        const container = getScrollParent(\n          refParent.current\n        ).getBoundingClientRect()\n\n        // get all the distances between the parent border and his container\n        const parentRect =\n          refParent?.current?.getBoundingClientRect() ||\n          ({\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: 0,\n            height: 50\n          } as DOMRect)\n        const childrenRect =\n          refChildren?.current?.getBoundingClientRect() ||\n          ({\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: 0,\n            height: 50\n          } as DOMRect)\n        const left = parentRect.left - container.left\n        const top = parentRect.top - container.top\n        const right = container.width - (left + parentRect.width)\n        const bottom = container.height - (top + parentRect.height)\n        let positionHasBeenSet = false\n        // find the best position in the preference array in params and update css\n        for (const positionItem of preferences || []) {\n          if (\n            isPositionAvailable(\n              positionItem,\n              top,\n              left,\n              bottom,\n              right,\n              parentRect,\n              childrenRect\n            )\n          ) {\n            positionHasBeenSet = true\n            updatePosition(positionItem, parentRect, childrenRect)\n            setActualPosition(positionItem)\n            break\n          }\n        }\n        // find a  position if the preference are empty or if none of the preference item is available\n        if (!positionHasBeenSet && !strictMode) {\n          for (const positionItem of EVERY_POSITIONS) {\n            if (\n              isPositionAvailable(\n                positionItem,\n                top,\n                left,\n                bottom,\n                right,\n                parentRect,\n                childrenRect\n              )\n            ) {\n              positionHasBeenSet = true\n              updatePosition(positionItem, parentRect, childrenRect)\n              setActualPosition(positionItem)\n              break\n            }\n          }\n        } else if (!positionHasBeenSet && strictMode) {\n          updatePosition('none', parentRect, childrenRect)\n        }\n      }\n    })\n  }\n\n  //return a boolean whether the position is available or not\n  function isPositionAvailable(\n    position: PositionPreferences,\n    top: number,\n    left: number,\n    bottom: number,\n    right: number,\n    parentRect: DOMRect,\n    childrenRect: DOMRect\n  ) {\n    switch (position) {\n      case 'top':\n        if (\n          top >= childrenRect.height + space &&\n          left >= (childrenRect.width - parentRect.width) / 2 &&\n          right >= (childrenRect.width - parentRect.width) / 2\n        ) {\n          return true\n        }\n        return false\n      case 'top-right':\n        if (\n          top >= childrenRect.height + space &&\n          left >= childrenRect.width - parentRect.width &&\n          right >= 0\n        ) {\n          return true\n        }\n        return false\n      case 'top-left':\n        if (\n          top >= childrenRect.height + space &&\n          right >= childrenRect.width - parentRect.width &&\n          left >= 0\n        ) {\n          return true\n        }\n        return false\n      case 'bottom':\n        if (\n          bottom >= childrenRect.height + space &&\n          left >= (childrenRect.width - parentRect.width) / 2 &&\n          right >= (childrenRect.width - parentRect.width) / 2\n        ) {\n          return true\n        }\n        return false\n      case 'bottom-left':\n        if (\n          bottom >= childrenRect.height + space &&\n          right >= childrenRect.width - parentRect.width &&\n          left >= 0\n        ) {\n          return true\n        }\n        return false\n      case 'bottom-right':\n        if (\n          bottom >= childrenRect.height + space &&\n          left >= childrenRect.width - parentRect.width &&\n          right >= 0\n        ) {\n          return true\n        }\n        return false\n      case 'left':\n        if (\n          left >= childrenRect.width + space &&\n          top >= (childrenRect.height - parentRect.height) / 2 &&\n          bottom >= (childrenRect.height - parentRect.height) / 2\n        ) {\n          return true\n        }\n        return false\n      case 'left-top':\n        if (\n          left >= childrenRect.width + space &&\n          bottom >= childrenRect.height - parentRect.height &&\n          top >= 0\n        ) {\n          return true\n        }\n        return false\n      case 'left-bottom':\n        if (\n          left >= childrenRect.width + space &&\n          top >= childrenRect.height - parentRect.height &&\n          bottom >= 0\n        ) {\n          return true\n        }\n        return false\n      case 'right':\n        if (\n          right >= childrenRect.width + space &&\n          top >= (childrenRect.height - parentRect.height) / 2 &&\n          bottom >= (childrenRect.height - parentRect.height) / 2\n        ) {\n          return true\n        }\n        return false\n      case 'right-top':\n        if (\n          right >= childrenRect.width + space &&\n          bottom >= childrenRect.height - parentRect.height &&\n          top >= 0\n        ) {\n          return true\n        }\n        return false\n      case 'right-bottom':\n        if (\n          right >= childrenRect.width + space &&\n          top >= childrenRect.height - parentRect.height &&\n          bottom >= 0\n        ) {\n          return true\n        }\n        return false\n      case 'none':\n        return true\n    }\n  }\n\n  // update the CSS UseState according to a position anchor\n  function updatePosition(\n    position: PositionPreferences,\n    parentRect: DOMRect,\n    childrenRect: DOMRect\n  ) {\n    switch (position) {\n      case 'top':\n        setPosition({\n          top: 'unset',\n          left: -(childrenRect.width - parentRect.width) / 2,\n          right: 'unset',\n          bottom: parentRect.height + space,\n          position: 'absolute'\n        })\n        break\n      case 'top-left':\n        setPosition({\n          top: 'unset',\n          left: 0,\n          bottom: parentRect.height + space,\n          right: 'unset',\n          position: 'absolute'\n        })\n        break\n      case 'top-right':\n        setPosition({\n          top: 'unset',\n          left: 'unset',\n          right: 0,\n          bottom: parentRect.height + space,\n\n          position: 'absolute'\n        })\n        break\n      case 'bottom':\n        setPosition({\n          top: parentRect.height + space,\n          left: -(childrenRect.width - parentRect.width) / 2,\n          bottom: 'unset',\n          right: 'unset',\n          position: 'absolute'\n        })\n        break\n      case 'bottom-left':\n        setPosition({\n          top: parentRect.height + space,\n          left: 0,\n          bottom: 'unset',\n          right: 'unset',\n          position: 'absolute'\n        })\n        break\n      case 'bottom-right':\n        setPosition({\n          top: parentRect.height + space,\n          left: 'unset',\n          bottom: 'unset',\n          right: 0,\n          position: 'absolute'\n        })\n        break\n      case 'right':\n        setPosition({\n          top: -(childrenRect.height - parentRect.height) / 2,\n          bottom: 'unset',\n          left: parentRect.width + space,\n          right: 'unset',\n          position: 'absolute'\n        })\n        break\n      case 'right-top':\n        setPosition({\n          top: 0,\n          bottom: 'unset',\n          left: parentRect.width + space,\n          right: 'unset',\n          position: 'absolute'\n        })\n        break\n      case 'right-bottom':\n        setPosition({\n          top: 'unset',\n          bottom: 0,\n          left: parentRect.width + space,\n          right: 'unset',\n          position: 'absolute'\n        })\n        break\n      case 'left':\n        setPosition({\n          top: -(childrenRect.height - parentRect.height) / 2,\n          left: 'unset',\n          bottom: 'unset',\n          right: parentRect.width + space,\n          position: 'absolute'\n        })\n        break\n      case 'left-top':\n        setPosition({\n          top: 0,\n          left: 'unset',\n          bottom: 'unset',\n          right: parentRect.width + space,\n          position: 'absolute'\n        })\n        break\n      case 'left-bottom':\n        setPosition({\n          top: 'unset',\n          left: 'unset',\n          bottom: 0,\n          right: parentRect.width + space,\n          position: 'absolute'\n        })\n        break\n      case 'none':\n        setPosition({\n          top: 'unset',\n          left: 'unset',\n          right: 'unset',\n          bottom: 'unset',\n          position: 'absolute',\n          opacity: 0\n        })\n    }\n  }\n  // listen every scroll/resize on the window and update CSS position\n  useEffect(() => {\n    window.addEventListener(\n      'scroll',\n      () => {\n        findBestPosition(space, strictMode, preferences)\n      },\n      true\n    )\n    window.addEventListener(\n      'resize',\n      () => {\n        findBestPosition(space, strictMode, preferences)\n      },\n      true\n    )\n    return () => {\n      window.removeEventListener(\n        'scroll',\n        () => {\n          findBestPosition(space, strictMode, preferences)\n        },\n        true\n      )\n      window.removeEventListener(\n        'resize',\n        () => {\n          findBestPosition(space, strictMode, preferences)\n        },\n        true\n      )\n    }\n  }, [refParent, space, strictMode, preferences])\n\n  useEffect(() => {\n    findBestPosition(space, strictMode, preferences)\n  }, [space, strictMode, preferences])\n  // listen every resize of the element to position\n  useLayoutEffect(() => {\n    if (refParent) {\n      findBestPosition(space, strictMode, preferences)\n    }\n  }, [...deps])\n\n  return [setNodeParent, setNodeChildren, position, actualPosition]\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport style from '../css/demo.module.css'\nimport usePositionning from 'usepositionning'\nexport default function Demo({\n  space,\n  preferences,\n  strictMode\n}: {\n  space: number\n  preferences: Array<string>\n  strictMode: boolean\n}): JSX.Element {\n  const rootRef = useRef<HTMLDivElement>(null)\n  const [open, setOpen] = useState(true)\n  const [refParent, refChildren, styleChildren, actualPosition] =\n    usePositionning(\n      {\n        space: space,\n        preferences: preferences,\n        strictMode: strictMode\n      },\n      [open]\n    )\n  useEffect(() => {\n    rootRef?.current?.scroll(900, 450)\n  }, [])\n  return (\n    <div className={style.root} ref={rootRef}>\n      <div\n        className={style.parent}\n        ref={refParent}\n        onClick={() => {\n          setOpen(!open)\n        }}\n      >\n        <p>Parent element</p>\n        <p>Click me </p>\n        {open && (\n          <div className={style.child} ref={refChildren} style={styleChildren}>\n            <p>Child Element</p>\n            <p> Actual position : {actualPosition} </p>\n          </div>\n        )}\n      </div>\n      <div className={style.space}></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport style from '../css/editor.module.css'\nexport default function Editor({\n  space,\n  preferences,\n  strictMode\n}: {\n  space: number\n  preferences: Array<string>\n  strictMode: boolean\n}): JSX.Element {\n  return (\n    <div className={style.root}>\n      <div className={style.editorWindow}>\n        <div className={style.line}></div>\n        <p className='import'>import</p>\n        <p className='var'>React</p>\n        <p className='import'>from</p>\n        <p className='string'>'react'</p>\n        <div className={style.line}>\n          <p className='import'>import</p>\n          <p className='var'>usePositionning</p>\n          <p className='import'>from</p>\n          <p className='string'>'usepositionning'</p>\n        </div>\n        <br />\n        <div className={style.line}>\n          <p className='import'>export</p>\n          <p className='import'>default</p>\n          <p className='darkConst'>function</p>\n          <p className='function'>\n            Demo <span className='white'>( )</span>{' '}\n          </p>\n          <p className='white'>{'{'} </p>\n        </div>\n        <div className={style.line}>\n          <p className='darkConst space'>const</p>\n          <p className='const'>\n            {' '}\n            <span className='white'>[ </span>open{' '}\n            <span className='white'>,</span>\n            <span className='function'> setOpen</span>{' '}\n            <span className='white'> ] = </span>\n            <span className='function'>useState</span>\n            <span className='white'>( </span>\n            <span className='const'>false</span>\n            <span className='white'> ) ; </span>\n          </p>\n        </div>\n        <div className={style.line}>\n          <p className='darkConst space'>const</p>\n          <p className='const'>\n            {' '}\n            <span className='white'>[ </span>parentRef{' '}\n            <span className='white'>,</span>\n            <span className='const'> refChildren</span>{' '}\n            <span className='white'>,</span>\n            <span className='const'> styleChildren</span>\n            <span className='white'>,</span>\n            <span className='const'> actualPosition</span>\n            <span className='white'> ] = </span>\n          </p>\n        </div>\n\n        <div className={style.line}>\n          <p className='function space2'>\n            usePositionning <span className='white'>({'{'}</span>{' '}\n          </p>\n        </div>\n        <div className={style.line}>\n          <p className='var space3'>\n            space: <span className='number'> {space} </span>\n            <span className='white'> ,</span>{' '}\n          </p>\n        </div>\n\n        <div className={style.line}>\n          <p className='var space3'>\n            preferences:{' '}\n            <span className='white'>\n              [{' '}\n              {preferences.map((position, index) => {\n                return (\n                  <span className='string'>\n                    {position}\n                    {index !== preferences.length - 1 ? (\n                      <span className='white'> , </span>\n                    ) : (\n                      ''\n                    )}\n                  </span>\n                )\n              })}{' '}\n              ]\n            </span>\n            <span className='white'> ,</span>{' '}\n          </p>\n        </div>\n\n        <div className={style.line}>\n          <p className='var space3'>\n            strictMode: <span className='darkConst'> {`${strictMode}`} </span>\n            <span className='white'> ,</span>{' '}\n          </p>\n        </div>\n\n        <div className={style.line}>\n          <p className='white space2'>{'}'} ) ;</p>\n        </div>\n\n        <br />\n        <div className={style.line}>\n          <p className='import space'>\n            return <span className='white'> ( </span>{' '}\n          </p>\n        </div>\n        <div className={style.line}>\n          <p className='darkConst space2'>\n            {' '}\n            <span className='bracket'>{'<'}</span>div\n          </p>\n          <p className='var'>\n            ref<span className='white'>=</span>\n            <span className='darkConst'>{'{'}</span>\n            <span className='const'>refParent</span>\n            <span className='darkConst'>{'}'}</span>\n            <span className='bracket'>{'>'}</span>\n          </p>\n        </div>\n        <div className={style.line}>\n          <p className='darkConst space3'>\n            {' '}\n            <span className='bracket'>{'<'}</span>p\n            <span className='bracket'>{'>'}</span>\n            <span className='white'>Parent Element</span>\n            <span className='bracket'>{'</'}</span>p\n            <span className='bracket'>{'>'}</span>\n          </p>\n        </div>\n        <div className={style.line}>\n          <p className='const space3'>\n            <span className='darkConst'>{'{ '}</span>\n            open\n            <span className='white'> {' && ( '}</span>\n          </p>\n        </div>\n\n        <div className={style.line}>\n          <p className='darkConst space4'>\n            {' '}\n            <span className='bracket'>{'<'}</span>div\n          </p>\n          <p className='var'>\n            ref<span className='white'>=</span>\n            <span className='darkConst'>{'{'}</span>\n            <span className='const'>refChildren</span>\n            <span className='darkConst'>{'}'}</span>\n            <span className='bracket'>{'>'}</span>\n          </p>\n          <p className='var'>\n            style<span className='white'>=</span>\n            <span className='darkConst'>{'{'}</span>\n            <span className='const'>styleChildren</span>\n            <span className='darkConst'>{'}'}</span>\n            <span className='bracket'>{'>'}</span>\n          </p>\n        </div>\n        <div className={style.line}>\n          <p className='darkConst space5'>\n            {' '}\n            <span className='bracket'>{'<'}</span>p\n            <span className='bracket'>{'>'}</span>\n            <span className='white'>Child Element</span>\n            <span className='bracket'>{'</'}</span>p\n            <span className='bracket'>{'>'}</span>\n          </p>\n        </div>\n        <div className={style.line}>\n          <p className='darkConst space5'>\n            {' '}\n            <span className='bracket'>{'<'}</span>p\n            <span className='bracket'>{'>'}</span>\n            <span className='white'>Actual position : </span>\n            <span className='darkConst'> {'{'} </span>\n            <span className='const'>actualPosition</span>\n            <span className='darkConst'> {'}'} </span>\n            <span className='bracket'>{'</'}</span>p\n            <span className='bracket'>{'>'}</span>\n          </p>\n        </div>\n        <div className={style.line}>\n          <span className='bracket space4'>{'</'}</span>\n          <span className='darkConst'>div</span>\n          <span className='bracket'>{'>'}</span>\n        </div>\n        <div className={style.line}>\n          <p className='darkConst space3'>\n            <span className='white'>) </span>\n            {'}'}\n          </p>\n        </div>\n\n        <div className={style.line}>\n          <span className='bracket space2'>{'</'}</span>\n          <span className='darkConst'>div</span>\n          <span className='bracket'>{'>'}</span>\n        </div>\n        <div className={style.line}>\n          <p className='white space'>)</p>\n        </div>\n        <div className={style.line}>\n          <p className='white '>{'}'}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport style from '../css/toggle.module.css'\nexport default function Toggle({\n  state,\n  setState\n}: {\n  state: boolean\n  setState: (state: boolean) => void\n}): JSX.Element {\n  return (\n    <div className={`${style.root}`} onClick={() => setState(!state)}>\n      <p>false</p>\n      <p>true</p>\n      <div className={`${style.select} ${state ? style.right : ''}`}></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport style from '../css/control.module.css'\nimport { EVERY_POSITIONS } from 'usepositionning'\nimport Multiselect from 'multiselect-react-dropdown'\nimport Toggle from './toggle'\n\ntype PositionOption = {\n  position: typeof EVERY_POSITIONS[number]\n  id: number\n}\n\nexport default function Control({\n  space,\n  setSpace,\n  preferences,\n  setPreferences,\n  strictMode,\n  setStrictMode\n}: {\n  space: number\n  setSpace: (number: number) => void\n  preferences: string[]\n  setPreferences: (preferences: string[]) => void\n  strictMode: boolean\n  setStrictMode: (strictStatus: boolean) => void\n}): JSX.Element {\n  const positionOptions = EVERY_POSITIONS.map((position, index) => {\n    return { position: position, id: index }\n  })\n\n  function preferenceChange(selectedValue: PositionOption[]) {\n    setPreferences(selectedValue.map(({ position }) => position))\n  }\n\n  return (\n    <div className={style.root}>\n      <div className={style.controls}>\n        <div className={style.input}>\n          <label htmlFor='range'>Space : </label>\n          <input\n            id='range'\n            type='range'\n            value={space}\n            onChange={(e) => {\n              setSpace(parseInt(e.target.value))\n            }}\n          />\n        </div>\n        <div className={style.input}>\n          <label htmlFor='strictMode'>StrictMode : </label>\n          <Toggle state={strictMode} setState={setStrictMode} />\n        </div>\n        <div className={style.input}>\n          <label htmlFor='preferences'>Position preferences : </label>\n          <Multiselect\n            options={positionOptions}\n            displayValue='position'\n            onSelect={(e) => {\n              preferenceChange(e)\n            }}\n            onRemove={(e) => {\n              preferenceChange(e)\n            }}\n            placeholder='Select the position preferences'\n            style={{\n              optionContainer: {\n                maxHeight: 150\n              }\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport Demo from './components/demo'\nimport Editor from './components/editor'\nimport Control from './components/control'\nimport style from './css/homePage.module.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faNpm } from '@fortawesome/free-brands-svg-icons'\nconst App = (): JSX.Element => {\n  const [space, setSpace] = useState(0)\n  const [strictMode, setStrictMode] = useState(false)\n  const [preferences, setPreferences] = useState<string[]>([])\n\n  return (\n    <div className={style.root}>\n      <div className={style.header}>\n        <h1>usePositionning</h1>\n        <div className={style.brandIcon}>\n          <a\n            href='https://github.com/RomainGuarinoni/usePositionning'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <FontAwesomeIcon className={style.icon} icon={faGithub} />\n          </a>\n          <a\n            href='https://www.npmjs.com/package/usepositionning'\n            rel='noopener noreferrer'\n            target='_blank'\n          >\n            <FontAwesomeIcon\n              className={`${style.icon} ${style.npm}`}\n              icon={faNpm}\n            />\n          </a>\n        </div>\n      </div>\n      <div className={style.demo}>\n        <div className={style.demoBox}>\n          <Demo\n            space={space}\n            preferences={preferences}\n            strictMode={strictMode}\n          />\n        </div>\n        <div className={style.demoBox}>\n          {' '}\n          <Editor\n            space={space}\n            preferences={preferences}\n            strictMode={strictMode}\n          />\n        </div>\n      </div>\n      <Control\n        preferences={preferences}\n        setPreferences={setPreferences}\n        space={space}\n        setSpace={setSpace}\n        strictMode={strictMode}\n        setStrictMode={setStrictMode}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"homePage_root__1G6YQ\",\"header\":\"homePage_header__11RvW\",\"demo\":\"homePage_demo__2efvW\",\"demoBox\":\"homePage_demoBox__dUK3U\",\"brandIcon\":\"homePage_brandIcon__L5Teh\",\"icon\":\"homePage_icon__3L3Bk\",\"npm\":\"homePage_npm__CJRaH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"control_root__yQ4Ch\",\"controls\":\"control_controls__XoOmt\",\"input\":\"control_input__2ltHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"demo_root__1O0Ou\",\"parent\":\"demo_parent__1MFkS\",\"child\":\"demo_child__3CdyZ\",\"space\":\"demo_space__34C87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"toggle_root__3-JYo\",\"select\":\"toggle_select__WZRnO\",\"right\":\"toggle_right__1WROS\"};"],"sourceRoot":""}